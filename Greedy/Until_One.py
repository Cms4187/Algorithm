#어떤 수 N이 1이 될때까지 두 과정 중 하나 반복 수행
#단, 2 과정은 N이 K로 나누어 떨어질때만 선택 가능

#두 과정
#1. N에서 1을 뺀다.
#2. N을 K로 나눈다.

#N = 17, K = 4일때, 1번을 수행시 16, 2번을 수행시 4, 2번을 수행시 1
#따라서 1번을 한 번, 2번을 두 번 수행시 N = 1이 된다. 총 수행 횟수: 3회

#입력 조건
#N은 2 ~ 100,000     K는 2 ~ 100,000 공백으로 구분하여 입력되는 자연수
#단, N은 반드시 K보다 크거나 같다.

#출력 조건
#첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야하는 횟수의 최솟값을 출력

N, K = map(int, input().split())

result = 0

#N이 K보다 크거나 같을 때 반복되게 하기
while N >= K:
    #N을 K로 나눈 나머지가 1이 아닐 때는 -1 해주게 설정
    while N % K != 0:
        N -= 1
        result += 1
    #위 while문 조건에 해당하지 않으면 N을 K로 나누어준다.
    N = N // K
    result += 1

#위 while문 N이 K보다 크거나 같은 조건이 성립하지 않을 때 N이 1보다 크다면 N에서 -1 해주게 설정
#마무리 단계
while N > 1:
    N -= 1
    result += 1

#결과값 출력
print(result)









